// <auto-generated />
using MeetingSchema.Data;
using MeetingSchema.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace MeetingSchema.Data.Migrations
{
    [DbContext(typeof(MeetingSchemaContext))]
    [Migration("20180415141231_MeetingSchemaInitial")]
    partial class MeetingSchemaInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MeetingSchema.Model.Entities.MeetingSchemas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreatorId");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2018, 4, 15, 16, 12, 31, 542, DateTimeKind.Local));

                    b.Property<DateTime>("DateUpdated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2018, 4, 15, 16, 12, 31, 549, DateTimeKind.Local));

                    b.Property<string>("Description");

                    b.Property<string>("Location");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<DateTime>("TimeEnd");

                    b.Property<DateTime>("TimeStart");

                    b.Property<string>("Title");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("MeetingSchemas");
                });

            modelBuilder.Entity("MeetingSchema.Model.Entities.Participants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MeetingSchemaId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("MeetingSchemaId");

                    b.HasIndex("UserId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("MeetingSchema.Model.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Profession");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MeetingSchema.Model.Entities.MeetingSchemas", b =>
                {
                    b.HasOne("MeetingSchema.Model.Entities.User", "Creator")
                        .WithMany("MeetingSchemaCreated")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("MeetingSchema.Model.Entities.Participants", b =>
                {
                    b.HasOne("MeetingSchema.Model.Entities.MeetingSchemas", "MeetingSchemas")
                        .WithMany("Participants")
                        .HasForeignKey("MeetingSchemaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MeetingSchema.Model.Entities.User", "User")
                        .WithMany("MeetingSchemaAttended")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
